stages:
  - images
  - build
  - test


ubuntu-image:
  stage: images
  tags:
    - docker-image-build
  only:
    - docker-images
  script: "echo" # unused but this line is required by GitLab CI
  variables:
    TO: ${CI_REGISTRY_IMAGE}:ubuntu
    DOCKER_FILE: tests/docker/Dockerfile-ubuntu


build-ubuntu-cov:
  stage: build
  image: ${CI_REGISTRY_IMAGE}:ubuntu
  script:
    - mkdir -p build-ubuntu-cov
    - cd build-ubuntu-cov
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Coverage ..
    - cmake --build . --target all
  artifacts:
    paths:
      - build-ubuntu-cov
  cache:
    paths:
      - build-ubuntu-cov

test-ubuntu-cov:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:ubuntu
  script:
    - cmake --build build-ubuntu-cov --target clean-coverage-stats
    - cmake --build build-ubuntu-cov --target test
    - cmake --build build-ubuntu-cov --target generate-coverage-report
  artifacts:
    paths:
      - build-ubuntu-cov/coverage_report


code-format:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:ubuntu
  script:
    - git fetch origin master
    - git diff --name-only --no-renames --diff-filter MA FETCH_HEAD...HEAD | grep -E '\.(h|cpp)$' |
      xargs --no-run-if-empty clang-format-3.9 -i --style=file || true
    - git diff --name-only --no-renames --diff-filter MA FETCH_HEAD...HEAD | grep -E '\.py$' |
      xargs --no-run-if-empty yapf3 -i || true
    - "echo \"From: Gitlab CI <noreply@cern.ch>\" > apply-formatting.patch"
    - "echo \"Date: $(date -R)\" >> apply-formatting.patch"
    - "echo \"Subject: [PATCH] Fixed formatting\" >> apply-formatting.patch"
    - echo "" >> apply-formatting.patch
    - echo "patch generated by ${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}" >> apply-formatting.patch
    - echo "" >> apply-formatting.patch
    - echo "" >> apply-formatting.patch
    - git diff >> apply-formatting.patch
    - git diff --stat --exit-code || (
      echo -e "\n=======================================\n You can fix formatting with:\n\n"
      "  curl ${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/raw/apply-formatting.patch | git am"
      "\n\n=======================================" ; false
      )
  artifacts:
    paths:
      - apply-formatting.patch
    when: on_failure
    expire_in: 1 day
